### BIG differences, this is a diff between CLUS "Accessor BIT, SBIT" entry and topic selection in CLHS http://clhs.lisp.se/Body/a_bit.htm
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:bit.txt	2017-04-27 22:05:16.000000000 +0100
+++ saved-pages-clus/cl:functions:bit.txt	2017-04-27 22:05:16.000000000 +0100
@@ -1,2 +1,1 @@
-BIT
-Please select which reference to BIT you intended
+Accessor BIT, SBIT

-AccessorTypeGlossary Entry
\ No newline at end of file
+Syntax
+ bit bit-array &rest subscripts → bit
+ sbit bit-array &rest subscripts → bit
+ (setf (bit bit-array &rest subscripts) new-bit)
+ (setf (sbit bit-array &rest subscripts) new-bit)
+Arguments and Values
+ bit-array - for bit, a bit array; for sbit, a simple bit array.
+ subscripts - a list of valid array indices for the bit-array.
+ bit - a bit.
+Description
+bit and sbit access the bit-array element specified by subscripts.
+These functions ignore the fill pointer when accessing elements.
+Examples
+(defparameter *bit-array*
+  (make-array 8 element-type 'bit
+                initial-element 1))
+→
+*BIT-ARRAY*
+(bit *bit-array* 3)
+→
+1
+(setf (bit *bit-array* 3) 0)
+→
+0
+(bit *bit-array* 3)
+→
+0
+(sbit *bit-array* 5)
+→
+1
+(setf (sbit *bit-array* 5) 1)
+→
+1
+(sbit *bit-array* 5)
+→
+1
+Affected By
+None.
+Exceptional Situations
+None.
+See Also
+Function AREF, {\secref\ConstantModification}
+Notes
+bit and sbit are like aref except that they require arrays to be a bit array and a simple bit array, respectively.
+bit and sbit, unlike char and schar, allow the first argument to be an array of any rank.
+\
\ No newline at end of file
