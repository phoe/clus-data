### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:make-condition.txt	2017-04-27 22:00:42.000000000 +0100
+++ saved-pages-clus/cl:functions:make-condition.txt	2017-04-27 22:00:42.000000000 +0100
@@ -2,7 +4,7 @@
 Syntax


-make-condition type &rest slot-initializations => condition
+make-condition type &rest slot-initializations → condition

 Arguments and Values

@@ -15,25 +24,54 @@
 Examples


  (defvar *oops-count* 0)

- (setq a (make-condition 'simple-error
+→
+*OOPS-COUNT*
+(defvar *a*
+  (make-condition 'simple-error
                          format-control "This is your ~R error."
                          format-arguments (list (incf *oops-count*))))
-=>  #<SIMPLE-ERROR 32245104>

- (format t "~&~A~%" a)
->>  This is your first error.
-=>  NIL
-
- (error a)
->>  Error This is your first error.
->>  To continue, type CONTINUE followed by an option number
->>   1 Return to Lisp Toplevel.
->>  Debug>
+→
+*A*
+(format t "~&~A~%" *a*)
+▷
+This is your first error.
+→
+NIL
+(error *a*)
+✖
+Error This is your first error.
+To continue, type CONTINUE followed by an option number
+1 Return to Lisp Toplevel.
+Debug>
+Side Effects
+None.

-<TT>
-Side Effects None.

 Affected By

@@ -37,10 +75,13 @@

 Affected By

 The set of defined condition types.
-Exceptional Situations None.
+Exceptional Situations
+None.

 See Also

-define-condition, Section 9.1 (Condition System Concepts)
### define-condition, Section 9.1 (Condition System Concepts) {\secref\ConditionSystemConcepts}
-Notes None.
\ No newline at end of file
+Macro DEFINE-CONDITION, {\secref\ConditionSystemConcepts}
+Notes
+None.
+\
\ No newline at end of file
