### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:array-total-size.txt	2017-04-27 22:05:34.000000000 +0100
+++ saved-pages-clus/cl:functions:array-total-size.txt	2017-04-27 22:05:34.000000000 +0100
@@ -2,1 +4,1 @@
 Syntax


-array-total-size array => size
+ array-total-size array → size

 Arguments and Values

@@ -14,15 +26,60 @@
 Examples


- (array-total-size (make-array 4)) =>  4
- (array-total-size (make-array 4 fill-pointer 2)) =>  4
- (array-total-size (make-array 0)) =>  0
- (array-total-size (make-array '(4 2))) =>  8
- (array-total-size (make-array '(4 0))) =>  0
- (array-total-size (make-array '())) =>  1

-<TT>
-Affected By None.
+(array-total-size (make-array 4))
+→
+4
+(array-total-size (make-array 4 fill-pointer 2))
+→
+4
+(array-total-size (make-array 0))
+→
+0
+(array-total-size (make-array '(4 2)))
+→
+8
+(array-total-size (make-array '(4 0)))
+→
+0
+(array-total-size (make-array '()))
+→
+1
+Affected By
+None.

 Exceptional Situations

@@ -26,17 +83,26 @@

 Exceptional Situations

 Should signal an error of type type-error if its argument is not an array.
 See Also

-make-array, array-dimensions
+Function MAKE-ARRAY, Function ARRAY-DIMENSIONS
 Notes

 If the array is a vector with a fill pointer, the fill pointer is ignored when calculating the array total size.
 Since the product of no arguments is one, the array total size of a zero-dimensional array is one.

- (array-total-size x)
-    ==  (apply #'* (array-dimensions x))
-    ==  (reduce #'* (array-dimensions x))

-<TT>
\ No newline at end of file
+(array-total-size x)
+  ≡ (apply #'* (array-dimensions x))
+  ≡ (reduce #'* (array-dimensions x))
\ No newline at end of file
