### Some changes
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:copy-list.txt	2017-04-27 22:02:39.000000000 +0100
+++ saved-pages-clus/cl:functions:copy-list.txt	2017-04-27 22:02:39.000000000 +0100
@@ -2,1 +4,1 @@
 Syntax


-copy-list list => copy
+ copy-list list → copy

 Arguments and Values

@@ -15,24 +29,118 @@
 Examples


- (setq lst (list 1 (list 2 3))) =>  (1 (2 3))
- (setq slst lst) =>  (1 (2 3))
- (setq clst (copy-list lst)) =>  (1 (2 3))
- (eq slst lst) =>  true
- (eq clst lst) =>  false
- (equal clst lst) =>  true
- (rplaca lst "one") =>  ("one" (2 3))
- slst =>  ("one" (2 3))
- clst =>  (1 (2 3))
- (setf (caadr lst) "two") =>  "two"
- lst =>  ("one" ("two" 3))
- slst =>  ("one" ("two" 3))
- clst =>  (1 ("two" 3))

-<TT>
-Side Effects None.
+(defparameter *list* (list 1 (list 2 3)))
+→
+*LIST*
+(defparameter *uncopied-list* *list*)
+→
+*UNCOPIED-LIST*
+(defparameter *copied-list* (copy-list *list*))
+→
+*COPIED-LIST*
+(eq *uncopied-list* *list*)
+→
+true
+(eq *copied-list* *list*)
+→
+false
+(equal *copied-list* *list*)
+→
+true
+(rplaca *list* "one")
+→
+("one" (2 3))
+*uncopied-list*
+→
+("one" (2 3))
+*copied-list*
+→
+(1 (2 3))
+(setf]] (caadr *list*) "two")
+→
+*list*
+→
+("one" ("two" 3))
+*uncopied-list*
+→
+("one" ("two" 3))
+*copied-list*
+→
+(1 ("two" 3))
+Side Effects
+None.
+Affected By
+None.

-Affected By None.

 Exceptional Situations

@@ -36,8 +144,10 @@

 Exceptional Situations

 The consequences are undefined if list is a circular list.
 See Also

-copy-alist, copy-seq, copy-tree
+Function COPY-ALIST, Function COPY-SEQ, Function COPY-TREE
+Example Implementation
### Added in CLUS
+To be done.
 Notes

 The copy created is equal to list, but not eq.
\ No newline at end of file
