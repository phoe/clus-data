### File looks OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:copy-readtable.txt	2017-04-27 21:45:41.000000000 +0100
+++ saved-pages-clus/cl:functions:copy-readtable.txt	2017-04-27 21:45:41.000000000 +0100
@@ -2,1 +4,1 @@
 Syntax


-copy-readtable &optional from-readtable to-readtable => readtable
+ copy-readtable &optional from-readtable to-readtable → readtable

 Arguments and Values

@@ -17,36 +34,134 @@
 Examples


- (setq zvar 123) =>  123
- (set-syntax-from-char #\z #\' (setq table2 (copy-readtable))) =>  T
- zvar =>  123
- (copy-readtable table2 *readtable*) =>  #<READTABLE 614000277>
- zvar =>  VAR
- (setq *readtable* (copy-readtable)) =>  #<READTABLE 46210223>
- zvar =>  VAR
- (setq *readtable* (copy-readtable nil)) =>  #<READTABLE 46302670>
- zvar =>  123

-<TT>
-Affected By None.
+(defparameter zvar 123)
+→
+ZVAR
+(defparameter *backup-table* (copy-readtable))
+→
+*BACKUP-TABLE*
+(set-syntax-from-char #\z #\' *backup-table*)
+→
+T
+zvar
+→
+123
+(copy-readtable *backup-table* *readtable*)
+→
+#<READTABLE 614000277>
+zvar
+→
+VAR
+(setf *readtable* (copy-readtable))
+→
+#<READTABLE 46210223>
+zvar
+→
+VAR
+(setf *readtable* (copy-readtable nil))
+→
+#<READTABLE 46302670>
+zvar
+→
+123
+Affected By
+None.
+Exceptional Situations
+None.

-Exceptional Situations None.

 See Also

-readtable, *readtable*
+ System Class READTABLE
+ Variable *READTABLE*
 Notes


-(setq *readtable* (copy-readtable nil))

-<TT> restores the input syntax to standard Common Lisp syntax, even if the initial readtable has been clobbered (assuming it is not so badly clobbered that you cannot type in the above expression).
+(setf *readtable* (copy-readtable nil))
+restores the input syntax to standard Common Lisp syntax, even if the initial readtable has been clobbered (assuming it is not so badly clobbered that you cannot type in the above expression).
 On the other hand,

-(setq *readtable* (copy-readtable))

-<TT> replaces the current readtable with a copy of itself. This is useful if you want to save a copy of a readtable for later use, protected from alteration in the meantime. It is also useful if you want to locally bind the readtable to a copy of itself, as in

-(let ((*readtable* (copy-readtable))) ...)
+(setf *readtable* (copy-readtable))
+replaces the current readtable with a copy of itself. This is useful if you want to save a copy of a readtable for later use, protected from alteration in the meantime. It is also useful if you want to locally bind the readtable to a copy of itself, as in
+(let ((*readtable* (copy-readtable)))
+  ...)

-<TT>
\ No newline at end of file
+\
\ No newline at end of file
