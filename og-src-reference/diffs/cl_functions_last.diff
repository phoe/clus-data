### One change
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:last.txt	2017-04-27 22:02:22.000000000 +0100
+++ saved-pages-clus/cl:functions:last.txt	2017-04-27 22:02:22.000000000 +0100
@@ -2,7 +4,7 @@
 Syntax


-last list &optional n => tail
+ last list &optional n → tail

 Arguments and Values

@@ -6,11 +10,11 @@

 Arguments and Values

 list - a list,  which might be a dotted list but must not be a circular list.
  n - a non-negative integer. The default is 1.
 tail - an object.
 Description

- last returns the last n conses (not the last n elements) of list). If list is (), last returns ().
+last returns the last n conses (not the last n elements) of list). If list is nil, last returns nil.
### CLHS "()" CLUS "nil"
 If n is zero, the atom that terminates list is returned. If n is greater than or equal to the number of cons cells in list, the result is list.
 Examples


@@ -17,38 +32,171 @@



- (last nil) =>  NIL
- (last '(1 2 3)) =>  (3)
- (last '(1 2 . 3)) =>  (2 . 3)
- (setq x (list 'a 'b 'c 'd)) =>  (A B C D)
- (last x) =>  (D)
- (rplacd (last x) (list 'e 'f)) x =>  (A B C D E F)
- (last x) =>  (F)
- (last '(a b c))   =>  (C)
- (last '(a b c) 0) =>  ()
- (last '(a b c) 1) =>  (C)
- (last '(a b c) 2) =>  (B C)
- (last '(a b c) 3) =>  (A B C)
- (last '(a b c) 4) =>  (A B C)
- (last '(a . b) 0) =>  B
- (last '(a . b) 1) =>  (A . B)
- (last '(a . b) 2) =>  (A . B)
+(last nil)
+→
+NIL
+(last '(1 2 3))
+→
+(3)
+(last '(1 2 . 3))
+→
+(2 . 3)
+(defparameter *x* (list 'a 'b 'c 'd))
+→
+*X*
+(last *x*)
+→
+(D)
+(rplacd (last *x*) (list 'e 'f))
+→
+(D E F)
+*x*
+→
+(A B C D E F)
+(last *x*)
+→
+(F)
+(last '(a b c))
+→
+(C)
+(last '(a b c) 0)
+→
+NIL

-<TT>
-Side Effects None.

-Affected By None.
+(last '(a b c) 1)
+→
+(C)
+(last '(a b c) 2)
+→
+(B C)
+(last '(a b c) 3)
+→
+(A B C)
+(last '(a b c) 4)
+→
+(A B C)
+(last '(a . b) 0)
+→
+B
+(last '(a . b) 1)
+→
+(A . B)
+(last '(a . b) 2)
+→
+(A . B)
+Side Effects
+None.
+Affected By
+None.

 Exceptional Situations

- The consequences are undefined if list is a circular list.  Should signal an error of type type-error if n is not a non-negative integer.
+The consequences are undefined if list is a circular list.
+Should signal an error of type type-error if n is not a non-negative integer.
 See Also

-butlast, nth
-Notes
+Function BUTLAST, Function NTH
+Example Implementation

  The following code could be used to define last.

@@ -56,8 +206,16 @@
    (check-type n (integer 0))
    (do ((l list (cdr l))
         (r list)
-        (i 0 (+ i 1)))
+       (i 0 (1+ i)))
        ((atom l) r)
      (if (>= i n) (pop r))))

-<TT>  The following X3J13 cleanup issues, not part of the specification, apply to this section LAST-N DOTTED-LIST-ARGUMENTSCLARIFY
\ No newline at end of file
+Notes
+None.
+\
\ No newline at end of file
