### File looks OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:constantly.txt	2017-04-27 21:57:03.000000000 +0100
+++ saved-pages-clus/cl:functions:constantly.txt	2017-04-27 21:57:04.000000000 +0100
@@ -3,1 +4,1 @@
 Syntax


-constantly value => function
+ constantly value → function

 Arguments and Values

@@ -15,26 +26,64 @@
 Examples


- (mapcar (constantly 3) '(a b c d)) =>  (3 3 3 3)
+(mapcar (constantly 3) '(a b c d))
+→
+(3 3 3 3)
  (defmacro with-vars (vars &body forms)
-   `((lambda ,vars ,@forms) ,@(mapcar (constantly nil) vars)))
-=>  WITH-VARS
- (macroexpand '(with-vars (a b) (setq a 3 b (* a a)) (list a b)))
-=>  ((LAMBDA (A B) (SETQ A 3 B (* A A)) (LIST A B)) NIL NIL), true
+  `((lambda ,vars ,@forms) ,@(mapcar (constantly nil]]) vars)))
+→
+WITH-VARS

-<TT>
-Affected By None.
+(macroexpand
+  '(with-vars (a b)
+     (setf a 3)
+     (setf b (* a a))
+     (list a b)))
+→
+((LAMBDA (A B) (SETF A 3) (SETF B (* A A)) (LIST A B)) NIL NIL), true
+Affected By
+None.
+Exceptional Situations
+None.

-Exceptional Situations None.

 See Also

-identity
+ Function IDENTITY
 Notes

 constantly could be defined by

- (defun constantly (object)
-   #'(lambda (&rest arguments) object))

-<TT>
\ No newline at end of file
+(defun constantly (object) #'(lambda (&rest arguments) object))
+\
\ No newline at end of file
