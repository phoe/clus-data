### Some changes
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:char-name.txt	2017-04-27 22:04:12.000000000 +0100
+++ saved-pages-clus/cl:functions:char-name.txt	2017-04-27 22:04:12.000000000 +0100
@@ -2,1 +4,1 @@
 Syntax


-char-name character => name
+ char-name character → name

 Arguments and Values

@@ -6,38 +10,94 @@

 Arguments and Values

 character - a character.
 name - a string or nil.
 Description

 Returns a string that is the name of the character, or nil if the character has no name.
 All non-graphic characters are required to have names unless they have some implementation-defined attribute which is not null. Whether or not other characters have names is implementation-dependent.
- The standard characters <Newline> and <Space> have the respective names "Newline" and "Space". The semi-standard characters <Tab>, <Page>, <Rubout>, <Linefeed>, <Return>, and <Backspace> (if they are supported by the implementation) have the respective names "Tab", "Page", "Rubout", "Linefeed", "Return", and "Backspace" (in the indicated case, even though name lookup by ``#\'' and by the function name-char is not case sensitive).
+The standard characters <Newline> and <Space> have the respective names "Newline" and "Space".
+The semi-standard characters <Tab>, <Page>, <Rubout>, <Linefeed>, <Return>, and <Backspace> (if they are supported by the implementation) have the respective names "Tab", "Page", "Rubout", "Linefeed", "Return", and "Backspace" (in the indicated case, even though name lookup by "#\" and by the function name-char is not case sensitive).
### CLHS ``#\'' CLUS "#\"
 Examples


- (char-name #\ ) =>  "Space"
- (char-name #\Space) =>  "Space"
- (char-name #\Page) =>  "Page"
+(char-name #\ )
+→
+"Space"
+(char-name #\Space)
+→
+"Space"
+(char-name #\Page)
+→
+"Page"

  (char-name #\a)
-=>  NIL
-OR=>  "LOWERCASE-a"
-OR=>  "Small-A"
-OR=>  "LA01"
+→
+NIL
+or "LOWERCASE-a"
+or "Small-A"
+or "LA01"

  (char-name #\A)
-=>  NIL
-OR=>  "UPPERCASE-A"
-OR=>  "Capital-A"
-OR=>  "LA02"
+→
+NIL
+or "UPPERCASE-A"
+or "Capital-A"
+or "LA02"

  ;; Even though its CHAR-NAME can vary, #\A prints as #\A
- (prin1-to-string (read-from-string (format nil "#\\~A" (or (char-name #\A) "A"))))
-=>  "#\\A"
+(prin1-to-string
+  (read-from-string
+    (format nil "#\\~A" (or (char-name #\A) "A"))))
+→
+"#\A"
+Affected By
+None.

-<TT>
-Affected By None.

 Exceptional Situations

@@ -41,10 +101,20 @@

 Exceptional Situations

 Should signal an error of type type-error if character is not a character.
 See Also

-name-char, Section 22.1.3.2 (Printing Characters)
+Function NAME-CHAR, {\secref\PrintingCharacters}
### name-char, Section 22.1.3.2 (Printing Characters) {\secref\PrintingCharacters}
 Notes

-Non-graphic characters having names are written by the Lisp printer as ``#\'' followed by the their name; see Section 22.1.3.2 (Printing Characters).
### Section 22.1.3.2 (Printing Characters) {\secref\PrintingCharacters}
\ No newline at end of file
+Non-graphic characters having names are written by the Lisp printer as "#\"# followed by the their name; see section {\secref\PrintingCharacters}.
### CLHS ``#\'' CLUS "#\"#
+\
\ No newline at end of file
