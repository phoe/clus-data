### Some changes
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:copy-tree.txt	2017-04-27 22:02:37.000000000 +0100
+++ saved-pages-clus/cl:functions:copy-tree.txt	2017-04-27 22:02:37.000000000 +0100
@@ -3,1 +4,1 @@
 Syntax


-copy-tree tree => new-tree
+ copy-tree tree → new-tree

 Arguments and Values

@@ -17,34 +32,68 @@
 Examples


- (setq object (list (cons 1 "one")
-                    (cons 2 (list 'a 'b 'c))))
-=>  ((1 . "one") (2 A B C))
- (setq object-too object) =>  ((1 . "one") (2 A B C))
- (setq copy-as-list (copy-list object))
- (setq copy-as-alist (copy-alist object))
- (setq copy-as-tree (copy-tree object))
- (eq object object-too) =>  true
- (eq copy-as-tree object) =>  false
- (eql copy-as-tree object) =>  false
- (equal copy-as-tree object) =>  true
- (setf (first (cdr (second object))) "a"
-       (car (second object)) "two"
-       (car object) '(one . 1)) =>  (ONE . 1)
- object =>  ((ONE . 1) ("two" "a" B C))
- object-too =>  ((ONE . 1) ("two" "a" B C))
- copy-as-list =>  ((1 . "one") ("two" "a" B C))
- copy-as-alist =>  ((1 . "one") (2 "a" B C))
- copy-as-tree =>  ((1 . "one") (2 A B C))

-<TT>
-Side Effects None.
+(defparameter *object* (list (cons 1 "one")
+                       (cons 2 (list 'a 'b 'c))
+→
+*OBJECT*
+(defparameter *object-too* *object*)
+→
+*OBJECT-TOO*
+(defparameter *copy-as-list* (copy-list *object*))
+→
+*COPY-AS-LIST*
+(defparameter *copy-as-alist* (copy-alist *object*))
+→
+*COPY-AS-ALIST*
+(defparameter *copy-as-tree* (copy-tree *object*))
+→
+*COPY-AS-TREE*
+(eq *object* *object-too*)
+→
+true
+(eq *copy-as-tree* *object*)
+→
+false
+(eql *copy-as-tree* *object*)
+→
+false

-Affected By None.
+(equal *copy-as-tree* *object*)
+→
+true
+(setf (first (cdr (second *object*))) "a"
+      (car (second *object*)) "two"
+      (car *object*) '(one . 1))
+→
+(ONE . 1)
+*object*
+→
+((ONE . 1) ("two" "a" B C))
+*object-too*
+→
+((ONE . 1) ("two" "a" B C))
+*copy-as-list*
+→
+((1 . "one") ("two" "a" B C))
+*copy-as-alist*
+→
+((1 . "one") (2 "a" B C))
+*copy-as-tree*
+→
+((1 . "one") (2 A B C))
+Side Effects
+None.
+Affected By
+None.
+Exceptional Situations
+None.

-Exceptional Situations None.

 See Also

-tree-equal
-Notes None.
\ No newline at end of file
+Function TREE-EQUAL
+Example Implementation
### Line added in CLUS
+To be done.
+Notes
+None.
\ No newline at end of file
