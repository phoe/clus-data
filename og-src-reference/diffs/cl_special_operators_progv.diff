### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:special_operators:progv.txt	2017-04-27 21:55:13.000000000 +0100
+++ saved-pages-clus/cl:special_operators:progv.txt	2017-04-27 21:55:15.000000000 +0100
@@ -2,7 +4,9 @@
 Syntax


-progv symbols values form* => result*
+ progv symbols values form* → result*

 Arguments and Values

@@ -17,9 +33,45 @@
 Examples


- (setq *x* 1) =>  1
- (progv '(*x*) '(2) *x*) =>  2
- *x* =>  1
+;;; TODO rewrite this example, toplevel SETQ is not good
+(setq *x* 1)
+→
+1
+(progv '(*x*) '(2) *x*)
+→
+2
+*x*
+→
+1
+(let ((foo 1))
+  (declare (special foo))
+  (list (progv '(foo) '(2) foo)
+        foo))
+→
+(1 2)

 Assuming *x* is not globally special,

@@ -23,15 +75,17 @@

 Assuming *x* is not globally special,

  (let ((*x* 3))
     (progv '(*x*) '(4)
-      (list *x* (symbol-value '*x*)))) =>  (3 4)
+    (list *x* (symbol-value '*x*))))
+→
+(3 4)

-<TT>
-Affected By None.

-Exceptional Situations None.
+Affected By
+None.
+Exceptional Situations
+None.

 See Also

-let, Section 3.1 (Evaluation) {\secref\Evaluation}
Section 3.1 (Evaluation)
+ Special Operator LET
+ {\secref\Evaluation}
 Notes

 Among other things, progv is useful when writing interpreters for languages embedded in Lisp; it provides a handle on the mechanism for binding dynamic variables.
\ No newline at end of file
