### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:identity.txt	2017-04-27 21:56:45.000000000 +0100
+++ saved-pages-clus/cl:functions:identity.txt	2017-04-27 21:56:45.000000000 +0100
@@ -2,7 +4,7 @@
 Syntax


-identity object => object
+ identity object → object

 Arguments and Values

@@ -13,17 +24,46 @@
 Examples


- (identity 101) =>  101
- (mapcan #'identity (list (list 1 2 3) '(4 5 6))) =>  (1 2 3 4 5 6)

-<TT>
-Side Effects None.
+(identity 101)
+→
+101
+(mapcan #'identity (list (list 1 2 3) '(4 5 6)))
+→
+(1 2 3 4 5 6)
+Side Effects

-Affected By None.

-Exceptional Situations None.
+None.
+Affected By
+None.
+Exceptional Situations
+None.
+See Also
+None.

-See Also None.

 Notes

@@ -27,10 +67,15 @@

 Notes

 identity is intended for use with functions that require a function as an argument.
 (eql x (identity x)) returns true for all possible values of x, but (eq x (identity x)) might return false when x is a number or character.
 identity could be defined by

-(defun identity (x) x)

-<TT>
\ No newline at end of file
+(defun identity (x) x)
\ No newline at end of file
