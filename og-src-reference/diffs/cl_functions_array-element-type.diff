### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:array-element-type.txt	2017-04-27 22:05:45.000000000 +0100
+++ saved-pages-clus/cl:functions:array-element-type.txt	2017-04-27 22:05:45.000000000 +0100
@@ -2,1 +4,1 @@
 Syntax


-array-element-type array => typespec
+ array-element-type array → typespec

 Arguments and Values

@@ -6,32 +10,84 @@

 Arguments and Values

 array - an array.
 typespec - a type specifier.
 Description

- Returns a type specifier which represents the actual array element type of the array, which is the set of objects that such an array can hold. (Because of array upgrading, this type specifier can in some cases denote a supertype of the expressed array element type of the array.)
+Returns a type specifier which represents the actual array element type of the array, which is the set of objects that such an array can hold.
+(Because of array upgrading, this type specifier can in some cases denote a supertype of the expressed array element type of the array.)
 Examples


- (array-element-type (make-array 4)) =>  T
+(array-element-type (make-array 4))
+→
+T
  (array-element-type (make-array 12 element-type '(unsigned-byte 8)))
-=>  implementation-dependent
+→
+implementation-dependent
  (array-element-type (make-array 12 element-type '(unsigned-byte 5)))
-=>  implementation-dependent

-<TT>
+→
+implementation-dependent

  (array-element-type (make-array 5 element-type '(mod 5)))

-<TT> could be (mod 5), (mod 8), fixnum, t, or any other type of which (mod 5) is a subtype.
+→
+(mod 5)
+or (mod 8)
+or fixnum
+or t
+;;; or any other type of which (mod 5) is a subtype.
 Affected By

 The implementation.
 Exceptional Situations

 Should signal an error of type type-error if its argument is not an array.
 See Also

-array, make-array, subtypep, upgraded-array-element-type
-Notes None.
\ No newline at end of file
+Type ARRAY, Function MAKE-ARRAY, Function SUBTYPEP, Function UPGRADED-ARRAY-ELEMENT-TYPE
+Notes
+None.
+\
\ No newline at end of file
