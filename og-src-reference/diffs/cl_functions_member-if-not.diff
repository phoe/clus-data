### Some changes
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:member-if-not.txt	2017-04-27 22:01:59.000000000 +0100
+++ saved-pages-clus/cl:functions:member-if-not.txt	2017-04-27 22:01:59.000000000 +0100
@@ -2,11 +4,11 @@
 Syntax


-member item list &key key test test-not => tail
+ member item list &key key test test-not → tail
+ member-if predicate list &key key → tail
+ member-if-not predicate list &key key → tail

-member-if predicate list &key key => tail

-member-if-not predicate list &key key => tail

 Arguments and Values

@@ -25,22 +46,66 @@
 Examples


- (member 2 '(1 2 3)) =>  (2 3)
- (member 2 '((1 . 2) (3 . 4)) test-not #'= key #'cdr) =>  ((3 . 4))
- (member 'e '(a b c d)) =>  NIL
-<TT>
- (member-if #'listp '(a b nil c d)) =>  (NIL C D)
- (member-if #'numberp '(a #\Space 5/3 foo)) =>  (5/3 FOO)
- (member-if-not #'zerop
-                 '(3 6 9 11 . 12)
-                 key #'(lambda (x) (mod x 3))) =>  (11 . 12)

-<TT>
-Side Effects None.
+(member 2 '(1 2 3))
+→
+(2 3)
+(member 2 '((1 . 2) (3 . 4)) test-not #'= key #'cdr)
+→
+((3 . 4))
+(member 'e '(a b c d))
+→
+NIL
+(member-if #'listp '(a b nil c d))
+→
+(NIL C D)
+(member-if #'numberp '(a #\Space 5/3 foo))
+→
+(5/3 FOO)
+(member-if-not #'zerop '(3 6 9 11 . 12) key #'(lambda (x) (mod x 3)))
+→
+(11 . 12)
+Side Effects
+None.
+Affected By
+None.

-Affected By None.

 Exceptional Situations

@@ -44,18 +109,44 @@

 Exceptional Situations

 Should be prepared to signal an error of type type-error if list is not a proper list.
 See Also

-find, position,  Section 3.6 (Traversal Rules and Side Effects)
### find, position,  Section 3.6 (Traversal Rules and Side Effects) {\secref\TraversalRules}
+Function FIND, Function POSITION, {\secref\TraversalRules}
+Example Implementation
### Line added in CLUS
+To be done.
 Notes

  The test-not parameter is deprecated.
  The function member-if-not is deprecated.
 In the following

- (member 'a '(g (a y) c a d e a f)) =>  (A D E A F)

-<TT>
+(member 'a '(g (a y) c a d e a f))
+→
+(A D E A F)
 the value returned by member is identical to the portion of the list beginning with a. Thus rplaca on the result of member can be used to alter the part of the list where a was found (assuming a check has been made that member did not return nil).
-The following X3J13 cleanup issues, not part of the specification, apply to this section TEST-NOT-IF-NOTFLUSH-ALL MAPPING-DESTRUCTIVE-INTERACTIONEXPLICITLY-VAGUE
\ No newline at end of file
+\
\ No newline at end of file
