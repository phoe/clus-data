### One change
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:macros:with-slots.txt	2017-04-27 21:48:19.000000000 +0100
+++ saved-pages-clus/cl:macros:with-slots.txt	2017-04-27 21:48:19.000000000 +0100
@@ -3,7 +4,9 @@
 Syntax


-with-slots (slot-entry*) instance-form declaration* form* => result*
+ with-slots (slot-entry*) instance-form declaration* form* → result*


 slot-entry= slot-name | (variable-name slot-name)
@@ -28,48 +48,61 @@
  (defclass thing ()
            ((x initarg x accessor thing-x)
             (y initarg y accessor thing-y)))
-=>  #<STANDARD-CLASS THING 250020173>
+→
+#<STANDARD-CLASS THING 250020173>
  (defmethod (setf thing-x) before (new-x (thing thing))
    (format t "~&Changing X from ~D to ~D in ~S.~%"
            (thing-x thing) new-x thing))
- (setq thing (make-instance 'thing x 0 y 1)) =>  #<THING 62310540>
- (with-slots (x y) thing (incf x) (incf y)) =>  2
- (values (thing-x thing) (thing-y thing)) =>  1, 2
- (setq thing1 (make-instance 'thing x 1 y 2)) =>  #<THING 43135676>
- (setq thing2 (make-instance 'thing x 7 y 8)) =>  #<THING 43147374>
- (with-slots ((x1 x) (y1 y))
-             thing1
-   (with-slots ((x2 x) (y2 y))
-               thing2
+(defparameter thing (make-instance 'thing x 0 y 1))
+→
+#<THING 62310540>
+(with-slots (x y) thing
+  (incf x)
+  (incf y))
+→
+2
+(values (thing-x thing) (thing-y thing))
+→
+1, 2
+(defparameter thing1 (make-instance 'thing x 1 y 2))
+→
+#<THING 43135676>
+(defparameter thing2 (make-instance 'thing x 7 y 8))
+→
+#<THING 43147374>
+(with-slots ((x1 x) (y1 y)) thing1
+  (with-slots ((x2 x) (y2 y)) thing2
      (list (list x1 (thing-x thing1) y1 (thing-y thing1)
                  x2 (thing-x thing2) y2 (thing-y thing2))
-           (setq x1 (+ y1 x2))
+          (setf x1 (+ y1 x2))
            (list x1 (thing-x thing1) y1 (thing-y thing1)
                  x2 (thing-x thing2) y2 (thing-y thing2))
            (setf (thing-x thing2) (list x1))
            (list x1 (thing-x thing1) y1 (thing-y thing1)
                  x2 (thing-x thing2) y2 (thing-y thing2)))))
->>  Changing X from 7 to (9) in #<THING 43147374>.
-=>  ((1 1 2 2 7 7 8 8)
-     9
-     (9 9 2 2 7 7 8 8)
-     (9)
-     (9 9 2 2 (9) (9) 8 8))

-<TT>
+▷
+Changing X from 7 to (9) in #<THING 43147374>.
+→
+((1 1 2 2 7 7 8 8) 9 (9 9 2 2 7 7 8 8) (9) (9 9 2 2 (9) (9) 8 8))
 Affected By

 defclass
 Exceptional Situations

 The consequences are undefined if any slot-name is not the name of a slot in the instance.
 See Also

-with-accessors, slot-value, symbol-macrolet
+ Macro WITH-ACCESSORS
+ Function SLOT-VALUE
+ symbol-macrolet
### Last line not modified
 Notes

 A with-slots expression of the form
- (with-slots (slot-entry1 ... slot-entryn) instance-form form1 ... formk)
+(with-slots (slot-entry1 ... slot-entryn) instance-form
+  form1
+  ...
+  formn
 expands into the equivalent of


@@ -73,24 +161,29 @@
 expands into the equivalent of


 (let ((in instance-form))
-  (symbol-macrolet (Q1 ... Qn) form1 ... formk))
+  (symbol-macrolet (Q1 ... Qn)
+    form1
+    ...
+    formk))
+where Qi, if slot-entryi is a symbol, is

-<TT>
-where Qi is


 (slot-entryi () (slot-value in 'slot-entryi))

-<TT>
-if slot-entryi is a symbol and is
+If slot-entryi is of the form (variable-namei slot-namei)), then Qi is


 (variable-namei () (slot-value in 'slot-namei))

-<TT>
-if slot-entryi is of the form

-(variable-namei 'slot-namei))

-<TT>
\ No newline at end of file
+\
\ No newline at end of file
