### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:hash-table-rehash-size.txt	2017-04-27 21:54:54.000000000 +0100
+++ saved-pages-clus/cl:functions:hash-table-rehash-size.txt	2017-04-27 21:54:54.000000000 +0100
@@ -3,7 +4,7 @@
 Syntax


-hash-table-rehash-size hash-table => rehash-size
+ hash-table-rehash-size hash-table → rehash-size

 Arguments and Values

@@ -15,14 +26,42 @@
 Examples


- (setq table (make-hash-table size 100 rehash-size 1.4))
-=>  #<HASH-TABLE EQL 0/100 2556371>
- (hash-table-rehash-size table) =>  1.4

-<TT>
-Side Effects None.
+(defparameter *table* (make-hash-table size 100 rehash-size 1.4))
+→
+*TABLE*
+*table*
+→
+#<HASH-TABLE EQL 0/100 2556371>
+(hash-table-rehash-size *table*)
+→
+1.4
+Side Effects
+None.
+Affected By
+None.

-Affected By None.

 Exceptional Situations

@@ -26,11 +65,23 @@

 Exceptional Situations

 Should signal an error of type type-error if hash-table is not a hash table.
 See Also

-make-hash-table, hash-table-rehash-threshold
+ Function MAKE-HASH-TABLE
+ Function HASH-TABLE-REHASH-THRESHOLD
 Notes

  If the hash table was created with an integer rehash size, the result is an integer, indicating that the rate of growth of the hash-table when rehashed is intended to be additive; otherwise, the result is a float, indicating that the rate of growth of the hash-table when rehashed is intended to be multiplicative. However, this value is only advice to the implementation; the actual amount by which the hash-table will grow upon rehash is implementation-dependent.
- The following X3J13 cleanup issues, not part of the specification, apply to this section HASH-TABLE-REHASH-SIZE-INTEGER HASH-TABLE-ACCESSX3J13-MAR-89
\ No newline at end of file
+\
\ No newline at end of file
