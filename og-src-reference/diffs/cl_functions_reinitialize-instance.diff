### File look OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:reinitialize-instance.txt	2017-04-27 21:48:51.000000000 +0100
+++ saved-pages-clus/cl:functions:reinitialize-instance.txt	2017-04-27 21:48:51.000000000 +0100
@@ -2,7 +4,7 @@
 Syntax


-reinitialize-instance instance &rest initargs &key &allow-other-keys => instance
+ reinitialize-instance instance &rest initargs &key &allow-other-keys â†’ instance

 Method Signatures

@@ -9,15 +13,34 @@

 reinitialize-instance (instance standard-object) &rest initargs

 Arguments and Values

 instance - an object.
 initargs - an initialization argument list.
 Description

-The generic function reinitialize-instance can be used to change the values of local slots of an instance according to initargs. This generic function can be called by users.
+The generic function reinitialize-instance can be used to change the values of local slots of an instance according to initargs.
+This generic function can be called by users.
 The system-supplied primary method for reinitialize-instance checks the validity of initargs and signals an error if an initarg is supplied that is not declared as valid. The method then calls the generic function shared-initialize with the following arguments the instance, nil (which means no slots should be initialized according to their initforms), and the initargs it received.
-Examples None.
+Examples
+None.

 Side Effects

@@ -21,8 +44,15 @@

 Side Effects

 The generic function reinitialize-instance changes the values of local slots.
-Affected By None.
+Affected By
+None.

 Exceptional Situations

@@ -26,10 +56,37 @@

 Exceptional Situations

 The system-supplied primary method for reinitialize-instance signals an error if an initarg is supplied that is not declared as valid.
 See Also

-initialize-instance, shared-initialize, update-instance-for-redefined-class, update-instance-for-different-class, slot-boundp, slot-makunbound, Section 7.3 (Reinitializing an Instance), Section 7.1.4 (Rules for Initialization Arguments), Section 7.1.2 (Declaring the Validity of Initialization Arguments)
### initialize-instance, shared-initialize, update-instance-for-redefined-class, update-instance-for-different-class, slot-boundp, slot-makunbound, Section 7.3 (Reinitializing an Instance) {\secref\InstanceReInit}
### Section 7.1.4 (Rules for Initialization Arguments) {\secref\InitargRules}
### Section 7.1.2 (Declaring the Validity of Initialization Arguments) {\secref\DeclaringInitargValidity}
+ Generic Function INITIALIZE-INSTANCE
+ Generic Function SHARED-INITIALIZE
+ Generic Function UPDATE-INSTANCE-FOR-REDEFINED-CLASS
+ Generic Function UPDATE-INSTANCE-FOR-DIFFERENT-CLASS
+ Function SLOT-BOUNDP
+ Function SLOT-MAKUNBOUND
+ {\secref\InstanceReInit}
+ {\secref\InitargRules}
+ {\secref\DeclaringInitargValidity}
 Notes

 Initargs are declared as valid by using the initarg option to defclass, or by defining methods for reinitialize-instance or shared-initialize. The keyword name of each keyword parameter specifier in the lambda list of any method defined on reinitialize-instance or shared-initialize is declared as a valid initialization argument name for all classes for which that method is applicable.
\ No newline at end of file
+\
\ No newline at end of file
