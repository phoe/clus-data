### File looks OK
### +++ CLUS
### --- CLHS

--- saved-pages-dpans3/cl:functions:sbit.txt	2017-04-27 22:05:07.000000000 +0100
+++ saved-pages-clus/cl:functions:sbit.txt	2017-04-27 22:05:07.000000000 +0100
@@ -2,9 +4,9 @@
 Syntax


-bit bit-array &rest subscripts => bit
+ bit bit-array &rest subscripts → bit

-sbit bit-array &rest subscripts => bit
+ sbit bit-array &rest subscripts → bit

 (setf (bit bit-array &rest subscripts) new-bit)

@@ -22,25 +37,90 @@
 Examples


- (bit (setq ba (make-array 8
-                            element-type 'bit
+(defparameter *bit-array*
+  (make-array 8 element-type 'bit
                             initial-element 1))
-       3) =>  1
- (setf (bit ba 3) 0) =>  0
- (bit ba 3) =>  0
- (sbit ba 5) =>  1
- (setf (sbit ba 5) 1) =>  1
- (sbit ba 5) =>  1

-<TT>
-Affected By None.
+→
+*BIT-ARRAY*
+(bit *bit-array* 3)
+→
+1
+(setf (bit *bit-array* 3) 0)
+→
+0
+(bit *bit-array* 3)
+→
+0
+(sbit *bit-array* 5)
+→
+1
+(setf (sbit *bit-array* 5) 1)
+→
+1
+(sbit *bit-array* 5)
+→
+1
+Affected By
+None.
+Exceptional Situations
+None.

-Exceptional Situations None.

 See Also

-aref,  Section 3.2.1 (Compiler Terminology)
### aref, Section 3.2.1 (Compiler Terminology) {\secref\ConstantModification}
+Function AREF, {\secref\ConstantModification}
 Notes

 bit and sbit are like aref except that they require arrays to be a bit array and a simple bit array, respectively.
 bit and sbit, unlike char and schar, allow the first argument to be an array of any rank.
\ No newline at end of file
+\
\ No newline at end of file
